{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "customer",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "vendors",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "geography",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "parts",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "vendorparts",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "sales",
						"type": "DatasetReference"
					},
					"name": "source6"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable6",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "sink7"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "sink8"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "SurrogateKey2"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Join3"
				},
				{
					"name": "Join4"
				},
				{
					"name": "DerivedColumn6"
				},
				{
					"name": "Join5"
				},
				{
					"name": "Join6"
				},
				{
					"name": "DerivedColumn7"
				}
			],
			"script": "source(output(\n\t\tfirst_name as string,\n\t\tmiddle_name as string,\n\t\tlast_name as string,\n\t\tSSN as string,\n\t\tapt_no as string,\n\t\tstreet_name as string,\n\t\tcust_city as string,\n\t\tcust_state as string,\n\t\tcust_country as string,\n\t\tcust_zip as string,\n\t\tcust_phone as string,\n\t\tcust_email as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tvendor_name as string,\n\t\tvendor_ssn as string,\n\t\tvendor_street_name as string,\n\t\tvendor_city as string,\n\t\tvendor_state as string,\n\t\tvendor_country as string,\n\t\tvendor_zip as string,\n\t\tvendor_email as string,\n\t\tvendor_phone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource(output(\n\t\tgeography_id as string,\n\t\tgeography_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source3\nsource(output(\n\t\tpart_id as string,\n\t\tpart_name as string,\n\t\tno_of_parts as string,\n\t\tprice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source4\nsource(output(\n\t\tvendor_ssn as string,\n\t\tpart_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source5\nsource(output(\n\t\tcust_ssn as string,\n\t\tvendor_ssn as string,\n\t\tgeography_id as string,\n\t\tpart_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source6\nSurrogateKey1 derive(street_name = concat(apt_no,',', street_name),\n\t\tfirst_name = upper(left(first_name,1))+lower(right(first_name,length(first_name)-1)),\n\t\tmiddle_name = lower(middle_name),\n\t\tlast_name = upper(left(last_name,1))+lower(right(last_name,length(last_name)-1)),\n\t\tcust_phone = substring(cust_phone, 1, 3)+'-'+substring(cust_phone, 4, 3)+'-'+substring(cust_phone, 7, 4)) ~> DerivedColumn1\nSurrogateKey2 derive(vendor_name = substring(upper(vendor_name),1,1)+substring(vendor_name, 2),\n\t\tvendor_phone = substring(vendor_phone, 1, 3)+'-'+substring(vendor_phone, 4, 3)+'-'+substring(vendor_phone, 7, 4)) ~> DerivedColumn2\nsource3 derive(geography_id = toInteger(geography_id)) ~> DerivedColumn3\nsource4 derive(part_id = toInteger(part_id)) ~> DerivedColumn4\nsource1 keyGenerate(output(cust_id as long),\n\tstartAt: 1L) ~> SurrogateKey1\nsource2 keyGenerate(output(vendor_id as long),\n\tstartAt: 1L) ~> SurrogateKey2\nsource6, DerivedColumn1 join(cust_ssn == SSN,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1, DerivedColumn2 join(source6@vendor_ssn == source2@vendor_ssn,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2, source3 join(source6@geography_id == source3@geography_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3, source4 join(source6@part_id == source4@part_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 derive(total_price = toInteger(price)*toInteger(no_of_parts)) ~> DerivedColumn6\nsource5, DerivedColumn2 join(source5@vendor_ssn == source2@vendor_ssn,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5, source4 join(source5@part_id == source4@part_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join6\nJoin6 derive(part_id = toInteger(source4@part_id)) ~> DerivedColumn7\nDerivedColumn6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCUST_ID as integer,\n\t\tCUST_SSN as integer,\n\t\tVendor_ID as integer,\n\t\tVendor_NAME as string,\n\t\tVENDOR_SSN as integer,\n\t\tGeography_ID as integer,\n\t\tGeography_NAME as string,\n\t\tPart_ID as integer,\n\t\tpart_NAME as string,\n\t\tNo_of_part as integer,\n\t\tprice as integer,\n\t\ttOTAL_PRICE as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCUST_ID = cust_id,\n\t\tCUST_SSN = cust_ssn,\n\t\tVendor_ID = vendor_id,\n\t\tVendor_NAME = vendor_name,\n\t\tVENDOR_SSN = source6@vendor_ssn,\n\t\tGeography_ID = source6@geography_id,\n\t\tGeography_NAME = geography_name,\n\t\tPart_ID = source6@part_id,\n\t\tpart_NAME = part_name,\n\t\tNo_of_part = no_of_parts,\n\t\tprice,\n\t\ttOTAL_PRICE = total_price\n\t)) ~> sink3\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCUST_ID as integer,\n\t\tCUST_F_NAME as string,\n\t\tCUST_M_NAME as string,\n\t\tCUST_L_NAME as string,\n\t\tCUST_SSN as integer,\n\t\tCUST_STREET as string,\n\t\tCUST_CITY as string,\n\t\tCUST_STATE as string,\n\t\tCUST_COUNTRY as string,\n\t\tCUST_ZIP as integer,\n\t\tCUST_PHONE as string,\n\t\tCUST_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCUST_ID = cust_id,\n\t\tCUST_F_NAME = first_name,\n\t\tCUST_M_NAME = middle_name,\n\t\tCUST_L_NAME = last_name,\n\t\tCUST_SSN = SSN,\n\t\tCUST_STREET = street_name,\n\t\tCUST_CITY = cust_city,\n\t\tCUST_STATE = cust_state,\n\t\tCUST_COUNTRY = cust_country,\n\t\tCUST_ZIP = cust_zip,\n\t\tCUST_PHONE = cust_phone,\n\t\tCUST_EMAIL = cust_email\n\t)) ~> sink4\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tVendor_ID as integer,\n\t\tVendor_NAME as string,\n\t\tVENDOR_SSN as integer,\n\t\tVendor_streetname as string,\n\t\tVendor_CITY as string,\n\t\tVendor_STATE as string,\n\t\tVendor_COUNTRY as string,\n\t\tVendor_ZIP as integer,\n\t\tVendor_Phone as string,\n\t\tVendor_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tVendor_ID = vendor_id,\n\t\tVendor_NAME = vendor_name,\n\t\tVENDOR_SSN = vendor_ssn,\n\t\tVendor_streetname = vendor_street_name,\n\t\tVendor_CITY = vendor_city,\n\t\tVendor_STATE = vendor_state,\n\t\tVendor_COUNTRY = vendor_country,\n\t\tVendor_ZIP = vendor_zip,\n\t\tVendor_Phone = vendor_phone,\n\t\tVendor_EMAIL = vendor_email\n\t)) ~> sink5\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tGeography_ID as integer,\n\t\tGeography_NAME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tGeography_ID = geography_id,\n\t\tGeography_NAME = geography_name\n\t)) ~> sink6\nDerivedColumn4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPart_ID as integer,\n\t\tpart_NAME as string,\n\t\tNo_of_part as integer,\n\t\tprice as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPart_ID = part_id,\n\t\tpart_NAME = part_name,\n\t\tNo_of_part = no_of_parts,\n\t\tprice\n\t)) ~> sink7\nDerivedColumn7 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tVendor_ID as integer,\n\t\tVendor_Ssn as integer,\n\t\tPart_ID as integer,\n\t\tpart_NAME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tVendor_ID = vendor_id,\n\t\tVendor_Ssn = source5@vendor_ssn,\n\t\tPart_ID = part_id,\n\t\tpart_NAME = part_name\n\t)) ~> sink8"
		}
	}
}