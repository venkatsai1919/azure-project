{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfforproject"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"inputBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'inputBlobStorage2'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"source4": {},
									"source5": {},
									"source6": {},
									"sink3": {},
									"sink4": {},
									"sink5": {},
									"sink6": {},
									"sink7": {},
									"sink8": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-30T10:30:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CUST_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CUST_F_NAME",
						"type": "varchar"
					},
					{
						"name": "CUST_M_NAME",
						"type": "varchar"
					},
					{
						"name": "CUST_L_NAME",
						"type": "varchar"
					},
					{
						"name": "CUST_SSN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CUST_STREET",
						"type": "varchar"
					},
					{
						"name": "CUST_CITY",
						"type": "varchar"
					},
					{
						"name": "CUST_STATE",
						"type": "varchar"
					},
					{
						"name": "CUST_COUNTRY",
						"type": "varchar"
					},
					{
						"name": "CUST_ZIP",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CUST_PHONE",
						"type": "varchar"
					},
					{
						"name": "CUST_EMAIL",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CDW_SAPP_D_CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Vendor_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vendor_NAME",
						"type": "varchar"
					},
					{
						"name": "VENDOR_SSN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vendor_streetname",
						"type": "varchar"
					},
					{
						"name": "Vendor_CITY",
						"type": "varchar"
					},
					{
						"name": "Vendor_STATE",
						"type": "varchar"
					},
					{
						"name": "Vendor_COUNTRY",
						"type": "varchar"
					},
					{
						"name": "Vendor_ZIP",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vendor_Phone",
						"type": "varchar"
					},
					{
						"name": "Vendor_EMAIL",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CDW_SAPP_D_VENDORS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Geography_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Geography_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CDW_SAPP_D_Geography"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Part_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "part_NAME",
						"type": "varchar"
					},
					{
						"name": "No_of_part",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CDW_SAPP_D_PART"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Vendor_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vendor_Ssn",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Part_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "part_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CDW_SAPP_D_Vendor_parts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CUST_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CUST_SSN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vendor_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vendor_NAME",
						"type": "varchar"
					},
					{
						"name": "VENDOR_SSN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Geography_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Geography_NAME",
						"type": "varchar"
					},
					{
						"name": "Part_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "part_NAME",
						"type": "varchar"
					},
					{
						"name": "No_of_part",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tOTAL_PRICE",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CDW_SAPP_F_PART_SALE_FACT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customer.csv",
						"container": "inputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "middle_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "apt_no",
						"type": "String"
					},
					{
						"name": "street_name",
						"type": "String"
					},
					{
						"name": "cust_city",
						"type": "String"
					},
					{
						"name": "cust_state",
						"type": "String"
					},
					{
						"name": "cust_country",
						"type": "String"
					},
					{
						"name": "cust_zip",
						"type": "String"
					},
					{
						"name": "cust_phone",
						"type": "String"
					},
					{
						"name": "cust_email",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/geography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "geography.csv",
						"container": "inputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "geography_id",
						"type": "String"
					},
					{
						"name": "geography_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part.csv",
						"container": "inputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "part_id",
						"type": "String"
					},
					{
						"name": "part_name",
						"type": "String"
					},
					{
						"name": "no_of_parts",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sales.csv",
						"container": "inputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cust_ssn",
						"type": "String"
					},
					{
						"name": "vendor_ssn",
						"type": "String"
					},
					{
						"name": "geography_id",
						"type": "String"
					},
					{
						"name": "part_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vendorparts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "vendor_parts.csv",
						"container": "inputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "vendor_ssn",
						"type": "String"
					},
					{
						"name": "part_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vendors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "inputBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "vendor.csv",
						"container": "inputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "vendor_name",
						"type": "String"
					},
					{
						"name": "vendor_ssn",
						"type": "String"
					},
					{
						"name": "vendor_street_name",
						"type": "String"
					},
					{
						"name": "vendor_city",
						"type": "String"
					},
					{
						"name": "vendor_state",
						"type": "String"
					},
					{
						"name": "vendor_country",
						"type": "String"
					},
					{
						"name": "vendor_zip",
						"type": "String"
					},
					{
						"name": "vendor_email",
						"type": "String"
					},
					{
						"name": "vendor_phone",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/inputBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('inputBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "customer",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "vendors",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "geography",
								"type": "DatasetReference"
							},
							"name": "source3"
						},
						{
							"dataset": {
								"referenceName": "parts",
								"type": "DatasetReference"
							},
							"name": "source4"
						},
						{
							"dataset": {
								"referenceName": "vendorparts",
								"type": "DatasetReference"
							},
							"name": "source5"
						},
						{
							"dataset": {
								"referenceName": "sales",
								"type": "DatasetReference"
							},
							"name": "source6"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable6",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink5"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sink6"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference"
							},
							"name": "sink7"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference"
							},
							"name": "sink8"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "SurrogateKey2"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "Join4"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "Join5"
						},
						{
							"name": "Join6"
						},
						{
							"name": "DerivedColumn7"
						}
					],
					"script": "source(output(\n\t\tfirst_name as string,\n\t\tmiddle_name as string,\n\t\tlast_name as string,\n\t\tSSN as string,\n\t\tapt_no as string,\n\t\tstreet_name as string,\n\t\tcust_city as string,\n\t\tcust_state as string,\n\t\tcust_country as string,\n\t\tcust_zip as string,\n\t\tcust_phone as string,\n\t\tcust_email as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tvendor_name as string,\n\t\tvendor_ssn as string,\n\t\tvendor_street_name as string,\n\t\tvendor_city as string,\n\t\tvendor_state as string,\n\t\tvendor_country as string,\n\t\tvendor_zip as string,\n\t\tvendor_email as string,\n\t\tvendor_phone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource(output(\n\t\tgeography_id as string,\n\t\tgeography_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source3\nsource(output(\n\t\tpart_id as string,\n\t\tpart_name as string,\n\t\tno_of_parts as string,\n\t\tprice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source4\nsource(output(\n\t\tvendor_ssn as string,\n\t\tpart_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source5\nsource(output(\n\t\tcust_ssn as string,\n\t\tvendor_ssn as string,\n\t\tgeography_id as string,\n\t\tpart_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source6\nSurrogateKey1 derive(street_name = concat(apt_no,',', street_name),\n\t\tfirst_name = upper(left(first_name,1))+lower(right(first_name,length(first_name)-1)),\n\t\tmiddle_name = lower(middle_name),\n\t\tlast_name = upper(left(last_name,1))+lower(right(last_name,length(last_name)-1)),\n\t\tcust_phone = substring(cust_phone, 1, 3)+'-'+substring(cust_phone, 4, 3)+'-'+substring(cust_phone, 7, 4)) ~> DerivedColumn1\nSurrogateKey2 derive(vendor_name = substring(upper(vendor_name),1,1)+substring(vendor_name, 2),\n\t\tvendor_phone = substring(vendor_phone, 1, 3)+'-'+substring(vendor_phone, 4, 3)+'-'+substring(vendor_phone, 7, 4)) ~> DerivedColumn2\nsource3 derive(geography_id = toInteger(geography_id)) ~> DerivedColumn3\nsource4 derive(part_id = toInteger(part_id)) ~> DerivedColumn4\nsource1 keyGenerate(output(cust_id as long),\n\tstartAt: 1L) ~> SurrogateKey1\nsource2 keyGenerate(output(vendor_id as long),\n\tstartAt: 1L) ~> SurrogateKey2\nsource6, DerivedColumn1 join(cust_ssn == SSN,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1, DerivedColumn2 join(source6@vendor_ssn == source2@vendor_ssn,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2, source3 join(source6@geography_id == source3@geography_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3, source4 join(source6@part_id == source4@part_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 derive(total_price = toInteger(price)*toInteger(no_of_parts)) ~> DerivedColumn6\nsource5, DerivedColumn2 join(source5@vendor_ssn == source2@vendor_ssn,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5, source4 join(source5@part_id == source4@part_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join6\nJoin6 derive(part_id = toInteger(source4@part_id)) ~> DerivedColumn7\nDerivedColumn6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCUST_ID as integer,\n\t\tCUST_SSN as integer,\n\t\tVendor_ID as integer,\n\t\tVendor_NAME as string,\n\t\tVENDOR_SSN as integer,\n\t\tGeography_ID as integer,\n\t\tGeography_NAME as string,\n\t\tPart_ID as integer,\n\t\tpart_NAME as string,\n\t\tNo_of_part as integer,\n\t\tprice as integer,\n\t\ttOTAL_PRICE as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCUST_ID = cust_id,\n\t\tCUST_SSN = cust_ssn,\n\t\tVendor_ID = vendor_id,\n\t\tVendor_NAME = vendor_name,\n\t\tVENDOR_SSN = source6@vendor_ssn,\n\t\tGeography_ID = source6@geography_id,\n\t\tGeography_NAME = geography_name,\n\t\tPart_ID = source6@part_id,\n\t\tpart_NAME = part_name,\n\t\tNo_of_part = no_of_parts,\n\t\tprice,\n\t\ttOTAL_PRICE = total_price\n\t)) ~> sink3\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCUST_ID as integer,\n\t\tCUST_F_NAME as string,\n\t\tCUST_M_NAME as string,\n\t\tCUST_L_NAME as string,\n\t\tCUST_SSN as integer,\n\t\tCUST_STREET as string,\n\t\tCUST_CITY as string,\n\t\tCUST_STATE as string,\n\t\tCUST_COUNTRY as string,\n\t\tCUST_ZIP as integer,\n\t\tCUST_PHONE as string,\n\t\tCUST_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCUST_ID = cust_id,\n\t\tCUST_F_NAME = first_name,\n\t\tCUST_M_NAME = middle_name,\n\t\tCUST_L_NAME = last_name,\n\t\tCUST_SSN = SSN,\n\t\tCUST_STREET = street_name,\n\t\tCUST_CITY = cust_city,\n\t\tCUST_STATE = cust_state,\n\t\tCUST_COUNTRY = cust_country,\n\t\tCUST_ZIP = cust_zip,\n\t\tCUST_PHONE = cust_phone,\n\t\tCUST_EMAIL = cust_email\n\t)) ~> sink4\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tVendor_ID as integer,\n\t\tVendor_NAME as string,\n\t\tVENDOR_SSN as integer,\n\t\tVendor_streetname as string,\n\t\tVendor_CITY as string,\n\t\tVendor_STATE as string,\n\t\tVendor_COUNTRY as string,\n\t\tVendor_ZIP as integer,\n\t\tVendor_Phone as string,\n\t\tVendor_EMAIL as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tVendor_ID = vendor_id,\n\t\tVendor_NAME = vendor_name,\n\t\tVENDOR_SSN = vendor_ssn,\n\t\tVendor_streetname = vendor_street_name,\n\t\tVendor_CITY = vendor_city,\n\t\tVendor_STATE = vendor_state,\n\t\tVendor_COUNTRY = vendor_country,\n\t\tVendor_ZIP = vendor_zip,\n\t\tVendor_Phone = vendor_phone,\n\t\tVendor_EMAIL = vendor_email\n\t)) ~> sink5\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tGeography_ID as integer,\n\t\tGeography_NAME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tGeography_ID = geography_id,\n\t\tGeography_NAME = geography_name\n\t)) ~> sink6\nDerivedColumn4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPart_ID as integer,\n\t\tpart_NAME as string,\n\t\tNo_of_part as integer,\n\t\tprice as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPart_ID = part_id,\n\t\tpart_NAME = part_name,\n\t\tNo_of_part = no_of_parts,\n\t\tprice\n\t)) ~> sink7\nDerivedColumn7 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tVendor_ID as integer,\n\t\tVendor_Ssn as integer,\n\t\tPart_ID as integer,\n\t\tpart_NAME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tVendor_ID = vendor_id,\n\t\tVendor_Ssn = source5@vendor_ssn,\n\t\tPart_ID = part_id,\n\t\tpart_NAME = part_name\n\t)) ~> sink8"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/customer')]",
				"[concat(variables('factoryId'), '/datasets/vendors')]",
				"[concat(variables('factoryId'), '/datasets/geography')]",
				"[concat(variables('factoryId'), '/datasets/parts')]",
				"[concat(variables('factoryId'), '/datasets/vendorparts')]",
				"[concat(variables('factoryId'), '/datasets/sales')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable6')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable4')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]"
			]
		}
	]
}